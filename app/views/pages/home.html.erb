<style type="text/css">
  #map {
    height: 100%;
  }
  html,
  body {
    height: 100%;
  }
  .custom-map-control-button {
    appearance: button;
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    cursor: pointer;
    margin: 10px;
    padding: 0 0.5em;
    height: 40px;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
  }
  .custom-map-control-button:hover {
    background: #ebebeb;
  }

  #floating-panel {
    position: absolute;
    top: 10px;
    left: 25%;
    z-index: 5;
    background-color: #fff;
    padding: 5px;
    border: 1px solid #999;
    text-align: center;
    font-family: "Roboto", "sans-serif";
    line-height: 30px;
    padding-left: 10px;
  }

  #floating-panel {
    background-color: #fff;
    border: 1px solid #999;
    left: 25%;
    padding: 5px;
    position: absolute;
    top: 10px;
    z-index: 5;
  }
</style>

<script>

  let map, heatmap, infoWindow;

  //var tokyo = new google.maps.LatLng(35.6681625, 139.6007829);

  function initMap() {

    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 16,
      //center: tokyo,
      center: { lat: 35.6681625, lng: 139.6007829 },
    });

    /**
     * HeatMap
     */
    var heatMapData = [
      <% @place_lat_lng_arr.each_with_index do |p, index| %>
        <% if index != @place_lat_lng_arr.count-1 %>
          new google.maps.LatLng(<%= p[:lat] %>, <%= p[:lng] %>),
        <% else %>
          new google.maps.LatLng(<%= p[:lat] %>, <%= p[:lng] %>)
        <% end %>
      <% end %>
    ];

    const gradient = [
"rgba(255, 255, 187, 0)",
"rgb(240, 249, 174)",
"rgb(224, 243, 161)",
"rgb(209, 238, 148)",
"rgb(194, 232, 135)",
"rgb(178, 226, 122)",
"rgb(163, 220, 109)",
"rgb(148, 215, 96)",
"rgb(132, 209, 83)",
"rgb(117, 203, 70)",
"rgb(101, 197, 57)",
"rgb(86, 191, 44)",
"rgb(71, 186, 31)",
"rgb(55, 180, 18)",
"rgb(40, 174, 5)"
    ];

    heatmap = new google.maps.visualization.HeatmapLayer({
      data: heatMapData,
      gradient: gradient,
      map: map,
      radius: 100,
      opacity: 0.5
    });

    /**
     * Geolocation
     */
    infoWindow = new google.maps.InfoWindow();
    const locationButton = document.createElement("button");
    locationButton.textContent = "Pan to Current Location";
    locationButton.classList.add("custom-map-control-button");
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(
      locationButton
    );
    locationButton.addEventListener("click", () => {
      // Try HTML5 geolocation.
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            const pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            };
            infoWindow.setPosition(pos);
            infoWindow.setContent("Location found.");
            infoWindow.open(map);
            map.setCenter(pos);
          },
          () => {
            handleLocationError(true, infoWindow, map.getCenter());
          }
        );
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
    });
  }

  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(
      browserHasGeolocation
        ? "Error: The Geolocation service failed."
        : "Error: Your browser doesn't support geolocation."
    );
    infoWindow.open(map);
  }

  /**
   * Buttons
   */
  function toggleEducationMap() {
    var url = '/get_places_json?lat='+map.getCenter().lat()
      +'&lng='+map.getCenter().lng()
      +'&keyword='+'school';

    var heatMapData = heatmap.getData();
    heatMapData.clear();

    fetch(url)
      .then(response => response.json())
      .then(function(data) {
        var objCount = data.length;
        for ( var x=0; x < objCount ; x++ ) {
          var cur_item = data[x];
          heatMapData.push( new google.maps.LatLng(cur_item.lat, cur_item.lng) );
        };
      });
    console.log( heatmap )
    //heatmap.setMap(heatmap.getMap() ? null : map);
    heatmap.setData(heatMapData);
  };

</script>

<div class='container-fluid' style='height: 100%;'>

  <div id="floating-panel">
    <button onclick="toggleEducationMap()">Toggle Education Map</button>
  </div>

  <div id="map"></div>

  <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
  <script
       src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.GOOGLE_API_KEY %>&callback=initMap&&libraries=visualization&v=weekly"
    async
  ></script>

</div>

